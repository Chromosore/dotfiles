" vim: foldmethod=marker
scriptencoding utf-8
set encoding=utf-8
" {{{ Compat
if has('nvim')
	let s:config_dir = stdpath('config')
	let s:data_dir = stdpath('data')
elseif has('win16') || has('win32') || has('win64')
	let s:config_dir = expand('~/vimfiles')
	let s:data_dir =   expand('~/vimfiles')
else
	let s:config_dir = expand('~/.vim')
	let s:data_dir =   expand('~/.vim')
endif
" }}}

" {{{ Plugins
if has('packages')
	" sensible.vim : a universal set of defaults
	packadd! vim-sensible

	packadd! vim-commentary

	packadd! vim-devicons

	" packadd! vim-airline
	" packadd! vim-airline-themes

	" packadd! lightline.vim

	"packadd! vim-startify

	packadd! fzf

	if has('conceal')
		packadd! indentLine
	else
		packadd! vim-indent-guides
	endif

	if !has('gui_running')
		packadd! terminus
	endif

	"packadd! vim-gitgutter

	augroup nerd_loader
		autocmd!
		autocmd VimEnter * silent! autocmd! FileExplorer
		autocmd BufEnter,BufNew *
					\		if isdirectory(expand('<amatch>'))
					\|		packadd vim-nerdtree-syntax-highlight
					\|		packadd nerdtree
					"\		packadd nerdtree-git-plugin
					\|		autocmd! nerd_loader
					\|	endif
	augroup END


	augroup PackLazyLoad
		autocmd!
		autocmd FileType typescript ++once
					\ packadd tsuquyomi
	augroup END
else
	let packpath_parts = split(&packpath, ',')
	for archive in packpath_parts
		let &rtp .= ','. join(glob(archive . '/pack/*/start/*', v:false, v:true), ',')
	endfor

	let user_packs = packpath_parts[0]
	let &rtp .= ','. join(glob(user_packs . '/pack/*/opt/*', v:false, v:true), ',')
	unlet user_packs

" Replaced by terminus
"if !has('nvim') && &term =~ "xterm"
	"let &t_VS = "\<Esc>[1 q"
	"let &t_SI = "\<Esc>[5 q"
	"let &t_SR = "\<Esc>[3 q"
	"let &t_EI = "\<Esc>[1 q"
"endif
	for archive in packpath_parts
		let &rtp .= ','. join(glob(archive . '/pack/*/after/*', v:false, v:true), ',')
	endfor
endif
" }}}

" undercurl (spell)
let &t_Cs = "\e[4:3m"
let &t_Ce = "\e[4:0m"

let g:badwolf_darkgutter=1

"let g:airline#extensions#tabline#enabled = 1
"let g:airline_left_sep = ""
"let g:airline_right_sep = ""
" Tabline settings (WIP)
let &tabline = &tabline

let &statusline = "%<%f %h%m%r%=%-14.(%l/%L :%c%V%) %y %P"


let g:deoplete#enable_at_startup = 1

let g:python3_host_prog = s:data_dir .. '/pynvim/bin/python3'

" Close vim if a quickfix window is the only open buffer
autocmd BufEnter * if winnr("$") == 1 && &buftype == "quickfix" |
	\ quit | endif

if !exists(":DiffOrig")
	command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
			\ | wincmd p | diffthis
endif

autocmd BufWritePre /tmp/* setlocal noundofile

if !empty(glob(s:config_dir .. expand('/local.vim')))
	execute "source" s:config_dir .. expand('/local.vim')
endif
